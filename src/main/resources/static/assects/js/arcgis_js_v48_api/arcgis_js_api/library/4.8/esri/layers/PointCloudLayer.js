// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../request ../core/Error ../core/lang ../core/Logger ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators ./Layer ./mixins/SceneService ./pointCloudFilters/jsonUtils ./pointCloudFilters/typeUtils ./support/Field ../renderers/support/pointCloud/jsonUtils ../renderers/support/pointCloud/typeUtils ../symbols/support/ElevationInfo".split(" "),function(m,C,
n,p,d,q,e,r,t,f,u,c,v,w,g,x,h,y,z,A){function k(c,b,a){c&&((c=y.read(c,b,a)||void 0)||B.error("Failed to create renderer",{rendererDefinition:c,layer:this,context:a}));return c}var B=t.getLogger("esri.layers.PointCloudLayer");return function(l){function b(a,b){a=l.call(this)||this;a.operationalLayerType="PointCloudLayer";a.opacity=1;a.fields=null;a.elevationInfo=null;a.legendEnabled=!0;a.renderer=null;a.type="point-cloud";return a}p(b,l);b.prototype.normalizeCtorArgs=function(a,b){return"string"===
typeof a?n({url:a},b):a};b.prototype.readServiceFields=function(a,b,c){return Array.isArray(a)?a.map(function(a){var b=new h;"FieldTypeInteger"===a.type&&(a=r.clone(a),a.type="esriFieldTypeInteger");b.read(a,c);return b}):Array.isArray(b.attributeStorageInfo)?b.attributeStorageInfo.map(function(a){return new h({name:a.name,type:"ELEVATION"===a.name?"double":"integer"})}):null};b.prototype.load=function(){var a=this,b=this.loadFromPortal({supportedTypes:["Scene Service"]}).always(function(){return a._fetchService()});
this.addResolvingPromise(b);return this.when()};b.prototype.importLayerViewModule=function(a){switch(a.type){case "2d":return f.reject(new e("point-cloud-layer:view-not-supported","PointCloudLayer is only supported in 3D"));case "3d":return f.create(function(a){return m(["../views/3d/layers/PointCloudLayerView3D"],a)})}};b.prototype._validateLayer=function(a){if(a.layerType&&"PointCloud"!==a.layerType)throw new e("pointcloudlayer:layer-type-not-supported","PointCloudLayer does not support this layer type",
{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new e("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});if(2<this.version.major)throw new e("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x-2.x"});};b.prototype.hasCachedStatistics=function(a){return null!=this.attributeStorageInfo&&this.attributeStorageInfo.some(function(b){return b.name===
a})};b.prototype.queryCachedStatistics=function(a){if(!this.hasCachedStatistics(a))return f.reject(new e("pointcloudlayer:no-cached-statistics","Cached statistics for this attribute are not available"));for(var b=0,c=this.attributeStorageInfo;b<c.length;b++){var d=c[b];if(d.name===a)return a=u.join(this.parsedUrl.path,"./statistics/"+d.key),q(a,{query:{f:"json"},responseType:"json"}).then(function(a){return a.data})}};d([c.property({readOnly:!0})],b.prototype,"operationalLayerType",void 0);d([c.property({readOnly:!0,
json:{write:!1,read:!1}})],b.prototype,"opacity",void 0);d([c.property({types:[x.types],json:{origins:{service:{read:{source:"filters",reader:g.read}}},read:{source:"layerDefinition.filters",reader:g.read},write:{target:"layerDefinition.filters",writer:g.write}}})],b.prototype,"filters",void 0);d([c.property({type:[h]})],b.prototype,"fields",void 0);d([c.reader("service","fields",["fields","attributeStorageInfo"])],b.prototype,"readServiceFields",null);d([c.property({readOnly:!0})],b.prototype,"attributeStorageInfo",
void 0);d([c.property({type:A,json:{origins:{service:{read:{source:"elevationInfo"}}},read:{source:"layerDefinition.elevationInfo"},write:{target:"layerDefinition.elevationInfo"}}})],b.prototype,"elevationInfo",void 0);d([c.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],b.prototype,"legendEnabled",void 0);d([c.property({types:z.types,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:k}}},read:{source:"layerDefinition.drawingInfo.renderer",
reader:k},write:{target:"layerDefinition.drawingInfo.renderer"}}})],b.prototype,"renderer",void 0);d([c.property({json:{read:!1},readOnly:!0})],b.prototype,"type",void 0);return b=d([c.subclass("esri.layers.PointCloudLayer")],b)}(c.declared(v,w))});