// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../core/tsSupport/declareExtendsHelper ../../../../../core/tsSupport/decorateHelper ../../../../../core/Handles ../../.././../../geometry/ScreenPoint ./AreaMeasurement3DView".split(" "),function(h,k,l,m,f,d,g){function e(c){return"mouse"!==c.pointerType||0===c.button}return function(){function c(a,b){this._dragVertices={};this._viewEventHandles=new f;this._tempPickRequest=new g.PickRequest;this.model=a;this.view=b;this.model.reset()}c.prototype.activate=function(a){var b=
this,c=this._viewEventHandles;c.add(a.on("immediate-click",function(a){return b._handleImmediateClick(a)}));c.add(a.on("click",function(a){return b._handleClick(a)}));c.add(a.on("double-click",function(a){return b._handleDoubleClick(a)}));c.add(a.on("drag",function(a){return b._handleDrag(a)}));c.add(a.on("pointer-move",function(a){return b._handlePointerMove(a)}));c.add(a.on("pointer-down",function(a){return b._handlePointerDown(a)}));c.add(a.on("pointer-up",function(a){return b._handlePointerUp(a)}));
c.add(a.on("pointer-drag",function(a){return b._handlePointerDrag(a)}));c.add(a.on("key-down",function(a){return b._handleKeyDown(a)}))};c.prototype.deactivate=function(){this._viewEventHandles.removeAll()};c.prototype._handleDrag=function(a){0!==this.model.draggedVertices.length&&a.stopPropagation()};c.prototype._handlePointerMove=function(a){var b=new d({x:a.x,y:a.y});"mouse"===a.pointerType&&this._hoverAt(b,a.pointerType)&&a.stopPropagation()};c.prototype._handlePointerDown=function(a){if(e(a)){var b=
new d({x:a.x,y:a.y}),b=this.view.vertexHandleAt(b,a.pointerType);null==b||b in this._dragVertices||(this._dragVertices[a.pointerId]=b,this.model.draggedVertices.push(b));0<this.model.draggedVertices.length&&"measured"===this.model.state&&(this.model.state="editing");"mouse"!==a.pointerType&&this._removeHover()}};c.prototype._handlePointerUp=function(a){if(e(a)){var b=this._dragVertices[a.pointerId];null!=b&&(delete this._dragVertices[a.pointerId],this.model.draggedVertices.remove(b));0===this.model.draggedVertices.length&&
"editing"===this.model.state&&(this.model.state="measured")}};c.prototype._handlePointerDrag=function(a){if(e(a)){var b=new d({x:a.x,y:a.y}),c=this._dragVertices[a.pointerId];if(null!=c){switch(a.action){case "update":this._moveVertexTo(c,b,a.pointerType);break;case "end":delete this._dragVertices[a.pointerId],this.model.draggedVertices.remove(c)}a.stopPropagation()}}};c.prototype._handleImmediateClick=function(a){if(e(a)){var b=new d({x:a.x,y:a.y});switch(this.model.state){case "initial":if(this._addVertexAt(b,
a.pointerType)){this.model.state="drawing";a.stopPropagation();return}break;case "drawing":var c=this.view.vertexHandleAt(b,a.pointerType);if(null===c){if(this._addVertexAt(b,a.pointerType)){a.stopPropagation();return}}else if(0===c){this._updateHoveredHandle(b,a.pointerType);this.model.finishMeasurement();a.stopPropagation();return}break;case "measured":if(null===this.view.vertexHandleAt(b,a.pointerType)&&(this.model.clearMeasurement(),this._addVertexAt(b,a.pointerType))){this.model.state="drawing";
a.stopPropagation();return}}"mouse"===a.pointerType&&this._hoverAt(b,a.pointerType)}};c.prototype._handleClick=function(a){e(a)&&a.stopPropagation()};c.prototype._handleDoubleClick=function(a){if(e(a)){var b=new d({x:a.x,y:a.y});"drawing"===this.model.state&&null!=this.view.vertexHandleAt(b,a.pointerType)&&(this.model.finishMeasurement(),a.stopPropagation())}};c.prototype._handleKeyDown=function(a){"Escape"===a.key&&"drawing"===this.model.state&&(this.model.clearMeasurement(),a.stopPropagation());
"Enter"===a.key&&"drawing"===this.model.state&&(this.model.finishMeasurement(),a.stopPropagation())};c.prototype._hoverAt=function(a,b){this._updateHoveredHandle(a,"mouse");this.view.requiresCursorPoint?(a=this._pick(a),a.mapPoint&&(this.model.cursorPoint=a.mapPoint)):this.model.cursorPoint=null};c.prototype._removeHover=function(){this.model.cursorPoint=null;this.model.hoveredVertexHandle=null};c.prototype._addVertexAt=function(a,b){var c=this._pick(a);if(c.mapPoint)return this.model.path.add(c.mapPoint),
this.model.hoveredVertexHandle="touch"!==b?this.model.path.length-1:null,!0;this._updateHoveredHandle(a,b);return!1};c.prototype._moveVertexTo=function(a,b,c){b=this._clipToScreen(b);if(null!=a){var d=this._pick(b);if(d.mapPoint&&!this.view.overlapsAnyHandles(d.mapPoint,[a]))return this.model.path.update(a,d.mapPoint),this.model.hoveredVertexHandle="touch"!==c?a:null,!0}this._updateHoveredHandle(b,c);return!1};c.prototype._pick=function(a){var b=this._tempPickRequest;b.screenPoint=a;return this.view.pick(b)};
c.prototype._clipToScreen=function(a){return new d({x:Math.max(0,Math.min(this.model.sceneView.width,a.x)),y:Math.max(0,Math.min(this.model.sceneView.height,a.y))})};c.prototype._updateHoveredHandle=function(a,b){this.model.hoveredVertexHandle="touch"!==b?this.view.vertexHandleAt(a,b):null};return c}()});