// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../../geometry/support/aaBoundingBox ../lib/glMatrix ./dito ./geometryUtils".split(" "),function(h,d,t,f,u,m){function n(a,b,c){return{center:f.vec3d.createFrom(a[0],a[1],a[2]),halfSize:q.createFrom(b[0],b[1],b[2]),quaternion:k.createFrom(c[0],c[1],c[2],c[3])}}function g(a,b){var c=m.plane.distance(b,a.center);a=r(a,b);return c>a?1:c<-a?-1:0}function r(a,b){k.conjugate(a.quaternion,p);k.multiplyVec3(p,b,l);a=a.halfSize;return Math.abs(l[0]*a[0])+Math.abs(l[1]*a[1])+Math.abs(l[2]*
a[2])}Object.defineProperty(d,"__esModule",{value:!0});var k=f.quat4,q=f.vec3;h=f.mat3d;var p=k.create(),l=q.create(),v=q.create(),w=h.create();h=function(){return function(a){this.buffer=new ArrayBuffer(56*a);this.obbs=Array(a);for(var b=0;b<a;b++)this.obbs[b]={center:new Float64Array(this.buffer,56*b+0,3),halfSize:new Float32Array(this.buffer,56*b+24,3),quaternion:new Float32Array(this.buffer,56*b+36,4)}}}();d.ObbArray=h;d.create=n;d.clone=function(a){return n(a.center,a.halfSize,a.quaternion)};
d.set=function(a,b){f.vec3d.set(a.center,b.center);f.vec3.set(a.halfSize,b.halfSize);f.quat4.set(a.quaternion,b.quaternion)};d.compute=function(a,b){b||(b=n([0,0,0],[-1,-1,-1],[0,0,0,1]));u.computeOBB(a,b);return b};d.intersectPlane=g;d.toAaBoundingBox=function(a,b){b||(b=t.create());var c=k.toMat3(a.quaternion,w),d=a.halfSize[0]*Math.abs(c[0])+a.halfSize[1]*Math.abs(c[3])+a.halfSize[2]*Math.abs(c[6]),f=a.halfSize[0]*Math.abs(c[1])+a.halfSize[1]*Math.abs(c[4])+a.halfSize[2]*Math.abs(c[7]),c=a.halfSize[0]*
Math.abs(c[2])+a.halfSize[1]*Math.abs(c[5])+a.halfSize[2]*Math.abs(c[8]);b[0]=a.center[0]-d;b[1]=a.center[1]-f;b[2]=a.center[2]-c;b[3]=a.center[0]+d;b[4]=a.center[1]+f;b[5]=a.center[2]+c;return b};d.minimumDistancePlane=function(a,b){var c=m.plane.distance(b,a.center);a=r(a,b);return c-a};d.maximumDistancePlane=function(a,b){var c=m.plane.distance(b,a.center);a=r(a,b);return c+a};d.isVisible=function(a,b){return 0>=g(a,b[0])&&0>=g(a,b[1])&&0>=g(a,b[2])&&0>=g(a,b[3])&&0>=g(a,b[4])&&0>=g(a,b[5])};d.intersectLine=
function(a,b,c,d){void 0===d&&(d=0);k.conjugate(a.quaternion,p);f.vec3.subtract(b,a.center,l);b=k.multiplyVec3(p,l,l);c=k.multiplyVec3(p,c,v);for(var g=-Infinity,h=Infinity,e=0;3>e;e++)if(1E-6<Math.abs(c[e]))var m=(d+a.halfSize[e]-b[e])/c[e],n=(-d-a.halfSize[e]-b[e])/c[e],g=Math.max(g,Math.min(m,n)),h=Math.min(h,Math.max(m,n));else if(b[e]>a.halfSize[e]+d||b[e]<-a.halfSize[e]-d)return!1;return g<=h}});