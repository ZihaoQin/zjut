// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../lib/glMatrix ../support/geometryUtils ../support/intersectionUtils ../webgl-engine/lib/Util".split(" "),function(f,g,d,k,e,h){Object.defineProperty(g,"__esModule",{value:!0});f=function(){function b(a){this.planes=Array(6);this.points=Array(8);this.lines=Array(12);this.origin=d.vec3d.create();this.direction=d.vec3d.create();this._altitude=null;this.renderCoordsHelper=a?a.renderCoordsHelper:null;for(a=0;6>a;a++)this.planes[a]=k.plane.create();for(a=0;8>a;a++)this.points[a]=
d.vec3d.create();for(a=0;12>a;a++)this.lines[a]={origin:null,direction:d.vec3d.create(),endpoint:null}}b.prototype.update=function(a){h.matrixToFrustumPoints(a.viewMatrix,a.projectionMatrix,this.points);this.updatePoints(this.points);d.vec3d.set(a.eye,this.origin);d.vec3d.set(a.viewForward,this.direction);this._altitude=this.renderCoordsHelper.getAltitude(this.origin);this.updateLines()};b.prototype.updatePoints=function(a){if(a!==this.points)for(var c=0;c<this.points.length;c++)d.vec3d.set(a[c],
this.points[c]);h.frustumPointsToPlanes(this.points,this.planes);this.updateLines()};Object.defineProperty(b.prototype,"altitude",{get:function(){return this._altitude},enumerable:!0,configurable:!0});b.prototype.intersectsSphere=function(a,c){return e.frustumSphere(this.planes,a,c)};b.prototype.intersectsRay=function(a,c,b){return e.frustumRay(this.planes,a,c,b)};b.prototype.intersectsLineSegment=function(a,c,b){return e.frustumLineSegment(this.planes,a,c,b)};b.prototype.intersectsPoint=function(a){return e.frustumPoint(this.planes,
a)};b.prototype.updateLines=function(){for(var a=0;4>a;a++){var c=a,b=a+4;this.updateLine(this.lines[a],this.points[c],this.points[b]);this.updateLine(this.lines[a+4],this.points[c],3===a?this.points[0]:this.points[c+1]);this.updateLine(this.lines[a+8],this.points[b],3===a?this.points[4]:this.points[b+1])}};b.prototype.updateLine=function(a,b,e){a.origin=b;a.endpoint=e;d.vec3d.direction(e,b,a.direction)};b.planePointIndices={bottom:[5,1,0,4],near:[0,1,2,3],far:[5,4,7,6],right:[1,5,6,2],left:[4,0,
3,7],top:[7,3,2,6]};b.nearFarLineIndices=[[0,4],[1,5],[2,6],[3,7]];return b}();g.Frustum=f;g.default=f});