// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../support/geometryUtils ./BufferVectorMath ./GeometryData ./gl-matrix ./Util".split(" "),function(aa,ba,U,R,A,a,k){function N(k,c,f,b,e){if(Math.abs(a.vec3.dot(c,k))>e)return!1;a.vec3.cross(k,c,f);a.vec3.normalize(f);a.vec3.cross(f,k,b);a.vec3.normalize(b);return!0}var G=R.Vec3Compact,O;(function(a){for(var c=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],f=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],b=[0,0,1,0,1,1,0,
1],e=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],h=Array(36),g=0;6>g;g++)for(var d=0;6>d;d++)h[6*g+d]=g;for(var m=Array(36),g=0;6>g;g++)m[6*g+0]=0,m[6*g+1]=1,m[6*g+2]=2,m[6*g+3]=2,m[6*g+4]=3,m[6*g+5]=0;a.createGeometry=function(d){Array.isArray(d)||(d=[d,d,d]);for(var g=new Float32Array(24),a=0;8>a;a++)g[3*a]=c[a][0]*d[0],g[3*a+1]=c[a][1]*d[1],g[3*a+2]=c[a][2]*d[2];d={};d[k.VertexAttrConstants.POSITION]=new Uint32Array(e);d[k.VertexAttrConstants.NORMAL]=new Uint32Array(h);
d[k.VertexAttrConstants.UV0]=new Uint32Array(m);a={};a[k.VertexAttrConstants.POSITION]={size:3,data:g};a[k.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(f)};a[k.VertexAttrConstants.UV0]={size:2,data:new Float32Array(b)};return new A(a,d)}})(O||(O={}));var L;(function(a){var c=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],f=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],b=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],e=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,
5,5,6,6,6,7,7,7];a.createGeometry=function(a){Array.isArray(a)||(a=[a,a,a]);for(var g=new Float32Array(18),d=0;6>d;d++)g[3*d]=c[d][0]*a[0],g[3*d+1]=c[d][1]*a[1],g[3*d+2]=c[d][2]*a[2];a={};a[k.VertexAttrConstants.POSITION]=new Uint32Array(b);a[k.VertexAttrConstants.NORMAL]=new Uint32Array(e);d={};d[k.VertexAttrConstants.POSITION]={size:3,data:g};d[k.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(f)};return new A(d,a)}})(L||(L={}));var P;(function(t){var c=a.vec3.createFrom(-.5,0,-.5),f=
a.vec3.createFrom(.5,0,-.5),b=a.vec3.createFrom(0,0,.5),e=a.vec3.createFrom(0,.5,0),h=a.vec3.create(),g=a.vec3.create(),d=a.vec3.create(),m=a.vec3.create(),l=a.vec3.create();a.vec3.subtract(c,e,h);a.vec3.subtract(c,f,g);a.vec3.cross(h,g,d);a.vec3.normalize(d,d);a.vec3.subtract(f,e,h);a.vec3.subtract(f,b,g);a.vec3.cross(h,g,m);a.vec3.normalize(m,m);a.vec3.subtract(b,e,h);a.vec3.subtract(b,c,g);a.vec3.cross(h,g,l);a.vec3.normalize(l,l);var p=[c,f,b,e],r=[0,-1,0,d[0],d[1],d[2],m[0],m[1],m[2],l[0],l[1],
l[2]],n=[0,1,2,3,1,0,3,2,1,3,0,2],u=[0,0,0,1,1,1,2,2,2,3,3,3];t.createGeometry=function(b){Array.isArray(b)||(b=[b,b,b]);for(var d=new Float32Array(12),c=0;4>c;c++)d[3*c]=p[c][0]*b[0],d[3*c+1]=p[c][1]*b[1],d[3*c+2]=p[c][2]*b[2];b={};b[k.VertexAttrConstants.POSITION]=new Uint32Array(n);b[k.VertexAttrConstants.NORMAL]=new Uint32Array(u);c={};c[k.VertexAttrConstants.POSITION]={size:3,data:d};c[k.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(r)};return new A(c,b)}})(P||(P={}));var Q;(function(t){t.createBoxGeometry=
O.createGeometry;t.createDiamondGeometry=L.createGeometry;t.createTetrahedronGeometry=P.createGeometry;t.createSphereGeometry=function(c,f,b,e,a,g,d){c=c||50;e=void 0!==e?e:-Math.PI;a=void 0!==a?a:2*Math.PI;g=void 0!==g?g:.5*-Math.PI;d=void 0!==d?d:Math.PI;var h=Math.max(3,Math.floor(f)||8),l=Math.max(2,Math.floor(b)||6),p=(h+1)*(l+1);b=new Float32Array(3*p);f=new Float32Array(3*p);for(var p=new Float32Array(2*p),r=[],n=0,u=0;u<=l;u++){for(var Y=[],t=u/l,y=g+t*d,w=Math.cos(y),B=0;B<=h;B++){var q=
B/h,x=e+q*a,M=Math.cos(x)*w,D=Math.sin(y),x=-Math.sin(x)*w;b[3*n]=M*c;b[3*n+1]=D*c;b[3*n+2]=x*c;f[3*n]=M;f[3*n+1]=D;f[3*n+2]=x;p[2*n]=q;p[2*n+1]=t;Y.push(n);++n}r.push(Y)}c=new Uint32Array(2*h*(l-1)*3);for(u=n=0;u<l;u++)for(B=0;B<h;B++)e=r[u][B],a=r[u][B+1],g=r[u+1][B+1],d=r[u+1][B],0===u?(c[n++]=e,c[n++]=g,c[n++]=d):u===l-1?(c[n++]=e,c[n++]=a,c[n++]=g):(c[n++]=e,c[n++]=a,c[n++]=g,c[n++]=g,c[n++]=d,c[n++]=e);k.assert(n===c.length);h={};h[k.VertexAttrConstants.POSITION]=c;h[k.VertexAttrConstants.NORMAL]=
c;h[k.VertexAttrConstants.UV0]=c;l={};l[k.VertexAttrConstants.POSITION]={size:3,data:b};l[k.VertexAttrConstants.NORMAL]={size:3,data:f};l[k.VertexAttrConstants.UV0]={size:2,data:p};return new A(l,h)};t.createPolySphereGeometry=function(c,a,b){function e(b,a){b>a&&(a=[a,b],b=a[0],a=a[1]);var e=b.toString()+"."+a.toString();if(d[e])return d[e];var g=f.length;f.length+=3;G.add(f,3*b,f,3*a,f,g);G.scale(f,g,c/G.length(f,g));g/=3;return d[e]=g}var f;b?(f=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],b=new Uint32Array([0,
1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1])):(b=c*(1+Math.sqrt(5))/2,f=[-c,b,0,c,b,0,-c,-b,0,c,-b,0,0,-c,b,0,c,b,0,-c,-b,0,c,-b,b,0,-c,b,0,c,-b,0,-c,-b,0,c],b=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]));for(var g=0;g<f.length;g+=3)G.scale(f,g,c/G.length(f,g));for(var d={},g=0;g<a;g++){for(var m=b.length,l=new Uint32Array(4*m),p=0;p<m;p+=3){var r=b[p],n=b[p+1],u=b[p+2],t=e(r,n),H=e(n,u),y=
e(u,r),w=4*p;l[w]=r;l[w+1]=t;l[w+2]=y;l[w+3]=n;l[w+4]=H;l[w+5]=t;l[w+6]=u;l[w+7]=y;l[w+8]=H;l[w+9]=t;l[w+10]=H;l[w+11]=y}b=l;d={}}a=new Float32Array(f);for(g=0;g<a.length;g+=3)G.normalize(a,g);g={};g[k.VertexAttrConstants.POSITION]=b;g[k.VertexAttrConstants.NORMAL]=b;b={};b[k.VertexAttrConstants.POSITION]={size:3,data:new Float32Array(f)};b[k.VertexAttrConstants.NORMAL]={size:3,data:a};return new A(b,g)};t.createPointGeometry=function(c,a,b,e,h,g,d){a=a?new Float32Array([a[0],a[1],a[2]]):new Float32Array([0,
0,0]);c=c?new Float32Array([c[0],c[1],c[2]]):new Float32Array([0,0,1]);g=g?new Float32Array(g):new Float32Array([0,0]);var f=b?new Uint8Array([255*b[0],255*b[1],255*b[2],3<b.length?255*b[3]:255]):new Uint8Array([255,255,255,255]),l=null!=e&&2===e.length?new Float32Array(e):new Float32Array([1,1]);e=new Uint32Array([0]);b={};b[k.VertexAttrConstants.POSITION]=e;b[k.VertexAttrConstants.NORMAL]=e;b[k.VertexAttrConstants.UV0]=e;b[k.VertexAttrConstants.COLOR]=e;b[k.VertexAttrConstants.SIZE]=e;var p={};
p[k.VertexAttrConstants.POSITION]={size:3,data:a};p[k.VertexAttrConstants.NORMAL]={size:3,data:c};p[k.VertexAttrConstants.UV0]={size:g.length,data:g};p[k.VertexAttrConstants.COLOR]={size:4,data:f};p[k.VertexAttrConstants.SIZE]={size:2,data:l};null!=h&&(h=new Float32Array([h[0],h[1],h[2],h[3]]),b[k.VertexAttrConstants.AUXPOS1]=e,p[k.VertexAttrConstants.AUXPOS1]={size:4,data:h});null!=d&&(d=new Float32Array([d[0],d[1],d[2],d[3]]),b[k.VertexAttrConstants.AUXPOS2]=e,p[k.VertexAttrConstants.AUXPOS2]={size:4,
data:d});return new A(p,b,A.DefaultOffsets,"point")};t.createPointArrayGeometry=function(c,a){for(var b=new Float32Array(3*c.length),e=new Float32Array(a?3*c.length:3),f=new Uint32Array(c.length),g=new Uint32Array(c.length),d=0;d<c.length;d++)b[3*d]=c[d][0],b[3*d+1]=c[d][1],b[3*d+2]=c[d][2],a&&(e[3*d]=a[d][0],e[3*d+1]=a[d][1],e[3*d+2]=a[d][2]),f[d]=d,g[d]=0;a||(e[0]=0,e[1]=1,e[2]=0);c=new Float32Array(2);c[0]=0;c[1]=0;d={};d[k.VertexAttrConstants.POSITION]=f;d[k.VertexAttrConstants.NORMAL]=a?f:g;
d[k.VertexAttrConstants.UV0]=g;a={};a[k.VertexAttrConstants.POSITION]={size:3,data:b};a[k.VertexAttrConstants.NORMAL]={size:3,data:e};a[k.VertexAttrConstants.UV0]={size:2,data:c};return new A(a,d,A.DefaultOffsets,"point")};t.createTriangleGeometry=function(){var a=new Float32Array([0,0,0,0,0,100,100,0,0]),f=new Uint32Array([0,1,2]),b=new Float32Array([0,1,0]),e=new Uint32Array([0,0,0]),h=new Float32Array([0,0]),g=new Uint32Array([0,0,0]),d={};d[k.VertexAttrConstants.POSITION]=f;d[k.VertexAttrConstants.NORMAL]=
e;d[k.VertexAttrConstants.UV0]=g;f={};f[k.VertexAttrConstants.POSITION]={size:3,data:a};f[k.VertexAttrConstants.NORMAL]={size:3,data:b};f[k.VertexAttrConstants.UV0]={size:2,data:h};return new A(f,d)};t.createSquareGeometry=function(a){var c=new Float32Array(12);if(a)for(var b=0;4>b;b++)for(var e=0;3>e;e++)c[3*b+e]=a[b][e];else c[0]=-1,c[1]=-1,c[2]=0,c[3]=1,c[4]=-1,c[5]=0,c[6]=1,c[7]=1,c[8]=0,c[9]=-1,c[10]=1,c[11]=0;var h=new Uint32Array([0,1,2,2,3,0]);a=new Float32Array([0,0,1]);var g=new Uint32Array([0,
0,0,0,0,0]),b=new Float32Array([0,0,1,0,1,1,0,1]),e=new Uint8Array([255,255,255,255]),d={};d[k.VertexAttrConstants.POSITION]=h;d[k.VertexAttrConstants.NORMAL]=g;d[k.VertexAttrConstants.UV0]=h;d[k.VertexAttrConstants.COLOR]=g;h={};h[k.VertexAttrConstants.POSITION]={size:3,data:c};h[k.VertexAttrConstants.NORMAL]={size:3,data:a};h[k.VertexAttrConstants.UV0]={size:2,data:b};h[k.VertexAttrConstants.COLOR]={size:4,data:e};return new A(h,d)};t.createConeGeometry=function(c,f,b,e){var h=0,g=a.vec3.createFrom(0,
h,0),d=a.vec3.createFrom(0,h+c,0),m=a.vec3.createFrom(0,-1,0),l=a.vec3.createFrom(0,1,0);e&&(h=c,d=a.vec3.createFrom(0,0,0),g=a.vec3.createFrom(0,h,0),m=a.vec3.createFrom(0,1,0),l=a.vec3.createFrom(0,-1,0));g=[d,g];m=[m,l];l=b+2;d=Math.sqrt(c*c+f*f);if(e)for(e=b-1;0<=e;e--)p=2*Math.PI/b*e,r=a.vec3.createFrom(Math.cos(p)*f,h,Math.sin(p)*f),g.push(r),p=a.vec3.createFrom(c*Math.cos(p)/d,-f/d,c*Math.sin(p)/d),m.push(p);else for(e=0;e<b;e++){var p=2*Math.PI/b*e,r=a.vec3.createFrom(Math.cos(p)*f,h,Math.sin(p)*
f);g.push(r);p=a.vec3.createFrom(c*Math.cos(p)/d,f/d,c*Math.sin(p)/d);m.push(p)}c=new Uint32Array(6*(b+2));b=new Uint32Array(6*(b+2));h=f=0;for(e=3;e<g.length;e++)c[f++]=1,c[f++]=e-1,c[f++]=e,b[h++]=0,b[h++]=0,b[h++]=0;c[f++]=g.length-1;c[f++]=2;c[f++]=1;b[h++]=0;b[h++]=0;b[h++]=0;for(e=3;e<g.length;e++)c[f++]=e,c[f++]=e-1,c[f++]=0,b[h++]=e,b[h++]=e-1,b[h++]=1;c[f++]=0;c[f++]=2;c[f++]=g.length-1;b[h++]=1;b[h++]=2;b[h++]=m.length-1;f=new Float32Array(3*l);for(e=0;e<l;e++)f[3*e]=g[e][0],f[3*e+1]=g[e][1],
f[3*e+2]=g[e][2];g=new Float32Array(3*l);for(e=0;e<l;e++)g[3*e]=m[e][0],g[3*e+1]=m[e][1],g[3*e+2]=m[e][2];m={};m[k.VertexAttrConstants.POSITION]=c;m[k.VertexAttrConstants.NORMAL]=b;l={};l[k.VertexAttrConstants.POSITION]={size:3,data:f};l[k.VertexAttrConstants.NORMAL]={size:3,data:g};return new A(l,m)};t.createCylinderGeometry=function(c,f,b,e,h,g){e=e?a.vec3.create(e):a.vec3.createFrom(1,0,0);h=h?a.vec3.create(h):a.vec3.createFrom(0,0,0);g=void 0===g?!0:g;var d=a.vec3.create();a.vec3.normalize(e,
d);e=a.vec3.create();a.vec3.scale(d,Math.abs(c),e);var m=a.vec3.create();a.vec3.scale(e,-.5,m);a.vec3.add(m,h);var l=a.vec3.createFrom(0,1,0);.2>Math.abs(1-a.vec3.dot(d,l))&&a.vec3.set3(0,0,1,l);var p=a.vec3.create();a.vec3.cross(d,l,p);a.vec3.normalize(p);a.vec3.cross(p,d,l);var r=2*b+(g?2:0),n=b+(g?2:0);c=new Float32Array(3*r);h=new Float32Array(3*n);var u=new Float32Array(2*r),t=new Uint32Array(3*b*(g?4:2)),H=new Uint32Array(3*b*(g?4:2));g&&(c[3*(r-2)+0]=m[0],c[3*(r-2)+1]=m[1],c[3*(r-2)+2]=m[2],
u[2*(r-2)]=0,u[2*(r-2)+1]=0,c[3*(r-1)+0]=c[3*(r-2)+0]+e[0],c[3*(r-1)+1]=c[3*(r-2)+1]+e[1],c[3*(r-1)+2]=c[3*(r-2)+2]+e[2],u[2*(r-1)]=1,u[2*(r-1)+1]=1,h[3*(n-2)+0]=-d[0],h[3*(n-2)+1]=-d[1],h[3*(n-2)+2]=-d[2],h[3*(n-1)+0]=d[0],h[3*(n-1)+1]=d[1],h[3*(n-1)+2]=d[2]);for(var d=function(a,b,c){t[a]=b;H[a]=c},y=0,w=a.vec3.create(),B=a.vec3.create(),q=0;q<b;q++){var x=2*Math.PI/b*q;a.vec3.scale(l,Math.sin(x),w);a.vec3.scale(p,Math.cos(x),B);a.vec3.add(w,B);h[3*q+0]=w[0];h[3*q+1]=w[1];h[3*q+2]=w[2];a.vec3.scale(w,
f);a.vec3.add(w,m);c[3*q+0]=w[0];c[3*q+1]=w[1];c[3*q+2]=w[2];u[2*q+0]=q/b;u[2*q+1]=0;c[3*(q+b)+0]=c[3*q+0]+e[0];c[3*(q+b)+1]=c[3*q+1]+e[1];c[3*(q+b)+2]=c[3*q+2]+e[2];u[2*(q+b)+0]=q/b;u[2*q+1]=1;x=(q+1)%b;d(y++,q,q);d(y++,q+b,q);d(y++,x,x);d(y++,x,x);d(y++,q+b,q);d(y++,x+b,x)}if(g){for(q=0;q<b;q++)x=(q+1)%b,d(y++,r-2,n-2),d(y++,q,n-2),d(y++,x,n-2);for(q=0;q<b;q++)x=(q+1)%b,d(y++,q+b,n-1),d(y++,r-1,n-1),d(y++,x+b,n-1)}f={};f[k.VertexAttrConstants.POSITION]=t;f[k.VertexAttrConstants.NORMAL]=H;f[k.VertexAttrConstants.UV0]=
t;b={};b[k.VertexAttrConstants.POSITION]={size:3,data:c};b[k.VertexAttrConstants.NORMAL]={size:3,data:h};b[k.VertexAttrConstants.UV0]={size:2,data:u};return new A(b,f)};t.createTubeGeometry=function(a,f,b,e,h){b=b||10;e=null!=e?e:!0;k.assert(1<a.length);for(var c=[],d=[],m=0;m<b;m++){c.push([0,-m-1,-((m+1)%b)-1]);var l=m/b*2*Math.PI;d.push([Math.cos(l)*f,Math.sin(l)*f])}return t.createPathExtrusionGeometry(d,a,[[0,0,0]],c,e,h)};t.createPathExtrusionGeometry=function(c,f,b,e,h,g){var d=c.length,m=
new Float32Array(f.length*d*3+(6*b.length||0)),l=new Float32Array(f.length*d+(2*b.length||0)),p=new Float32Array(f.length*d*3+(b?6:0)),r=(f.length-1)*d*6+6*e.length,n=new Uint32Array(r),r=new Uint32Array(r),u=0,t=0,H=0,y=0,w=0,B=a.vec3.create(),q=a.vec3.create(),x=a.vec3.create(),M=a.vec3.create(),D=a.vec3.create(),z=a.vec3.create(),G=a.vec3.create(),E=a.vec3.create(),J=a.vec3.create(),S=a.vec3.create(),O=a.vec3.create(),L=a.vec3.create(),P=a.vec3.create(),Q=U.plane.create();a.vec3.set3(0,1,0,J);
a.vec3.subtract(f[1],f[0],q);a.vec3.normalize(q);h?(a.vec3.add(f[0],g,E),a.vec3.normalize(E,x)):a.vec3.set3(0,0,1,x);var C=Z;N(q,x,D,x,C)||N(q,J,D,x,C)||N(q,J,D,x,C);a.vec3.set(x,M);a.vec3.set(D,L);for(var v=0;v<b.length;v++)a.vec3.scale(D,b[v][0],z),a.vec3.scale(x,b[v][2],E),a.vec3.add(z,E),a.vec3.add(z,f[0]),m[u++]=z[0],m[u++]=z[1],m[u++]=z[2],l[H++]=0;p[t++]=-q[0];p[t++]=-q[1];p[t++]=-q[2];for(v=0;v<e.length;v++)n[y++]=0<e[v][0]?e[v][0]:-e[v][0]-1+b.length,n[y++]=0<e[v][1]?e[v][1]:-e[v][1]-1+b.length,
n[y++]=0<e[v][2]?e[v][2]:-e[v][2]-1+b.length,r[w++]=0,r[w++]=0,r[w++]=0;for(var C=b.length,v=b.length-1,I=0;I<f.length;I++){var R=!1;if(0<I){a.vec3.set(q,B);I<f.length-1?(a.vec3.subtract(f[I+1],f[I],q),a.vec3.normalize(q)):R=!0;a.vec3.add(B,q,S);a.vec3.normalize(S);a.vec3.add(f[I-1],M,O);U.plane.fromPositionAndNormal(f[I],S,Q);if(U.plane.intersectRay(Q,O,B,E))a.vec3.subtract(E,f[I]),a.vec3.normalize(E,x),a.vec3.cross(S,x,D),a.vec3.normalize(D);else{var F=S,K=L,T=J,V=D,W=x,X=Z;N(F,M,V,W,X)||N(F,K,
V,W,X)||N(F,T,V,W,X)}a.vec3.set(x,M);a.vec3.set(D,L)}h&&(a.vec3.add(f[I],g,E),a.vec3.normalize(E,P));for(F=0;F<d;F++)if(a.vec3.scale(D,c[F][0],z),a.vec3.scale(x,c[F][1],E),a.vec3.add(z,E),a.vec3.normalize(z,G),p[t++]=G[0],p[t++]=G[1],p[t++]=G[2],h?l[H++]=a.vec3.dot(z,P):l[H++]=z[2],a.vec3.add(z,f[I]),m[u++]=z[0],m[u++]=z[1],m[u++]=z[2],!R)for(K=(F+1)%d,n[y++]=C+F,n[y++]=C+d+F,n[y++]=C+K,n[y++]=C+K,n[y++]=C+d+F,n[y++]=C+d+K,K=0;6>K;K++)r[w++]=n[y-6+K]-v;C+=d}c=f[f.length-1];for(v=0;v<b.length;v++)a.vec3.scale(D,
b[v][0],z),a.vec3.scale(x,b[v][1],E),a.vec3.add(z,E),a.vec3.add(z,c),m[u++]=z[0],m[u++]=z[1],m[u++]=z[2],l[H++]=0;b=t/3;p[t++]=q[0];p[t++]=q[1];p[t++]=q[2];d=C-d;for(v=0;v<e.length;v++)n[y++]=0<=e[v][0]?C+e[v][0]:-e[v][0]-1+d,n[y++]=0<=e[v][2]?C+e[v][2]:-e[v][2]-1+d,n[y++]=0<=e[v][1]?C+e[v][1]:-e[v][1]-1+d,r[w++]=b,r[w++]=b,r[w++]=b;e={};e[k.VertexAttrConstants.POSITION]=n;e[k.VertexAttrConstants.NORMAL]=r;n={};n[k.VertexAttrConstants.POSITION]={size:3,data:m};n.zOffset={size:1,data:l};n[k.VertexAttrConstants.NORMAL]=
{size:3,data:p};return new A(n,e)};t.createPolylineGeometry=function(a,f){k.assert(1<a.length,"createPolylineGeometry(): polyline needs at least 2 points");k.assert(3===a[0].length,"createPolylineGeometry(): malformed vertex");k.assert(void 0===f||f.length===a.length,"createPolylineGeometry: need same number of points and normals");k.assert(void 0===f||3===f[0].length,"createPolylineGeometry(): malformed normal");for(var b=new Float32Array(3*a.length),c=new Uint32Array(2*(a.length-1)),h=0,g=0,d=0;d<
a.length;d++){for(var m=0;3>m;m++)b[h++]=a[d][m];0<d&&(c[g++]=d-1,c[g++]=d)}h={};g={};h[k.VertexAttrConstants.POSITION]=c;g[k.VertexAttrConstants.POSITION]={size:3,data:b};if(f){for(var b=new Float32Array(3*f.length),l=0,d=0;d<a.length;d++)for(m=0;3>m;m++)b[l++]=f[d][m];h[k.VertexAttrConstants.NORMAL]=c;g[k.VertexAttrConstants.NORMAL]={size:3,data:b}}return new A(g,h,A.DefaultOffsets,"line")};t.addVertexColors=function(a,f){var b=f||[1,1,1,1];f=new Uint8Array(4);f[0]=255*b[0];f[1]=255*b[1];f[2]=255*
b[2];f[3]=255*(3<b.length?b[3]:1);var b={},c=a.getVertexAttr(),h;for(h in c)b[h]=c[h];b[k.VertexAttrConstants.COLOR]={size:4,data:f};f={};for(h in a.indices)f[h]=a.indices[h];f[k.VertexAttrConstants.COLOR]=new Uint32Array(f[k.VertexAttrConstants.POSITION].length);return a=new A(b,f,a.componentOffsets,a.primitiveType)};t.addNormals=function(c){var f=c.getVertexAttr();c=c.indices;for(var b=R.Vec3Compact.subtract,e=new Float32Array(c.position.length/3*3),h=f.position.data,g=0,d=c.position,m=new Uint32Array(d.length),
l=0;l<d.length;l+=3){b(h,3*d[l],h,3*d[l+2],T,0);b(h,3*d[l],h,3*d[l+1],J,0);a.vec3d.cross(J,T);a.vec3d.normalize(J);var p=g/3;e[g++]=J[0];e[g++]=J[1];e[g++]=J[2];m[l]=p;m[l+1]=p;m[l+2]=p}f[k.VertexAttrConstants.NORMAL]={size:3,data:e,offsetIdx:0,strideIdx:3};c[k.VertexAttrConstants.NORMAL]=m};t.cgToGIS=function(a,f){void 0===f&&(f=a);var b=a.getVertexAttr();a=b.position.data;var b=b.normal.data,c=f.getVertexAttr(),h=c.position.data,c=c.normal.data;if(b)for(var g=0;g<b.length;g+=3){var d=b[g+1];c[g+
1]=-b[g+2];c[g+2]=d}if(a)for(g=0;g<a.length;g+=3)d=a[g+1],h[g+1]=-a[g+2],h[g+2]=d;return f}})(Q||(Q={}));var Z=.99619469809,J=a.vec3.create(),T=a.vec3.create();return Q});