// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/assignHelper dojo/i18n!../../nls/smartMapping ../../../core/numberUtils ../../../core/promiseUtils ../../ClassBreaksRenderer ../../PointCloudRGBRenderer ../../PointCloudStretchRenderer ./support/utils ../statistics/summaryStatistics ../support/utils ../symbology/color ../../support/AuthoringInfo ../../support/AuthoringInfoVisualVariable ../../support/utils".split(" "),function(Q,n,g,w,D,d,x,E,F,e,y,f,p,z,G,r){function H(a){if(!(a&&a.layer&&(a.field||
a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));if(a.valueExpression&&!a.sqlExpression&&!a.view)return d.reject(e.createError("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified"));var b=g({},a);a=[0,1,2];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType;if("mesh"!==
a&&b.worldScale){if("polyline"===a||"polygon"===a)return d.reject(e.createError("color-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));if(!b.view||"3d"!==b.view.type)return d.reject(e.createError("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=
e.verifyBasicFieldValidity(c,a,"color-visual-variable:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function I(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));if(a.valueExpression&&!a.sqlExpression&&
!a.view)return d.reject(e.createError("color-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified"));var b=g({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,1,2];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType,m=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=
b.edgesType||"none";else{if(m&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=f.getFieldsList({field:b.field,
normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"color-continuous-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function J(a){if(!a||!a.layer||!a.field&&!a.valueExpression)return d.reject(e.createError("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required"));
if(a.valueExpression&&!a.view)return d.reject(e.createError("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified"));var b=g({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"equal-interval";b.normalizationType=f.getNormalizationType(b);a=[0,1,2];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?null!=b.minValue&&null!=b.maxValue||
null==b.minValue&&null==b.maxValue?c.load().then(function(){var a=c.geometryType,m=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if(m&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-class-breaks-renderer:invalid-parameters",
"'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField});return(a=e.verifyBasicFieldValidity(c,a,"color-class-breaks-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range")):d.reject(e.createError("color-class-breaks-renderer:invalid-parameters",
"'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function K(a){a=g({},a);delete a.basemap;delete a.colorScheme;delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.edgesType;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}function L(a){if(!a||!a.layer)return d.reject(e.createError("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));var b=g({},a);a=[3];var c=f.createLayerAdapter(b.layer,
a);b.layer=c;b.density=b.density||25;b.size=b.size||"100%";return e.isValidPointSize(b.size)?c?c.load().then(function(){return b}):d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function M(a){if(!(a&&a.layer&&a.field))return d.reject(e.createError("color-point-cloud-continuous-renderer:missing-parameters",
"'layer' and 'field' parameters are required"));var b=a.field.toLowerCase();if("intensity"!==b&&"elevation"!==b)return d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));var c=g({},a);a=[3];b=f.createLayerAdapter(c.layer,a);c.layer=b;c.density=c.density||25;c.size=c.size||"100%";return e.isValidPointSize(c.size)?b?b.load().then(function(){return c}):d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters",
"'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function N(a){a=g({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.edgesType;a.worldScale=b;return a}function t(a,b){var c=a.colorScheme,e=a.basemap;if(c)c=p.cloneScheme(c);else{b=b||a.theme||
"high-to-low";var d=p.getSchemes({theme:b,basemap:a.basemap,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view});d&&(e=d.basemapId,c=a.schemeId?p.getSchemeById({id:b+"/"+e+"/"+a.schemeId,geometryType:a.geometryType}):d.primaryScheme)}return{scheme:c,basemapId:e}}function A(a,b,c){for(var e=(b-a)/(c-1),d=[a],h=1;h<=c-2;h++)d.push(a+h*e);d.push(b);return D.round(d,{strictBounds:!0})}function B(a){return H(a).then(function(a){var b=a.normalizationField,q=b?"field":void 0;return(a.statistics?
d.resolve(a.statistics):y({layer:a.layer,field:a.field,valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:q,normalizationField:b,minValue:a.minValue,maxValue:a.maxValue,view:a.view})).then(function(c){var h=a.layer,q=a.field,k=q&&"function"!==typeof q?h.getField(q):null,l=k&&"date"===k.type,h=t({basemap:a.basemap,theme:a.theme,geometryType:h.geometryType,colorScheme:a.colorScheme,worldScale:a.worldScale,view:a.view});if(k=h.scheme){var f=e.createColors(k.colors,
5);if(5>f.length)c=d.reject(e.createError("color-visual-variable:insufficient-info","Color scheme does not have enough colors"));else{var m=e.getDefaultDataRange(c,l,!0),g=-1<k.id.indexOf("seq-"),g=m?A(m[0],m[1],5):e.createStopValues(c,g),f=e.createColors(f,5),q={type:"color",field:q,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationField:b,stops:r.createColorStops({values:g,isDate:l,dateFormatOptions:l?r.timelineDateFormatOptions:null,colors:f,labelIndexes:[0,
2,4]}),legendOptions:a.legendOptions},l=new G({type:"color",minSliderValue:c.min,maxSliderValue:c.max,theme:k.theme}),l=new z({visualVariables:[l]});c=d.resolve({basemapId:h.basemapId,visualVariable:q,statistics:c,defaultValuesUsed:!!m,colorScheme:p.cloneScheme(k),authoringInfo:l})}}else c=d.reject(e.createError("color-visual-variable:insufficient-info","Unable to find color scheme"));return c})})}function O(a,b){a=a.colorsForClassBreaks;var c;if(a&&0<a.length&&(a.some(function(a){a.numClasses===
b&&(c=a.colors);return!!c}),!c)){var d=a[a.length-1];a=b-d.numClasses;if(0<a){var f=d.colors[d.numClasses-1];c=d.colors.splice(0);for(d=1;d<=a;d++)c.push(f)}}c&&(c=e.createColors(c,c.length));return c}function P(a,b){var c=a.defaultSymbolEnabled,f=a.layer.geometryType,m=t({basemap:a.basemap,geometryType:f,colorScheme:a.colorScheme,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}),h=m.scheme,g=b.result,k=g.classBreakInfos,l=a.classificationMethod,n="standard-deviation"===l,u=a.normalizationType;
if(!h)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info","Unable to find color scheme"));var v=O(h,k.length);if(!v||v.length!==k.length)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info","Color scheme does not have enough colors"));c=new x({classBreakInfos:k.map(function(b,c){return{minValue:b.minValue,maxValue:b.maxValue,symbol:e.createSymbol(h,v[c],f,a.symbolType,a.colorMixMode,a.edgesType),label:b.label}}),defaultLabel:c?w.other:null,defaultSymbol:c?
e.createSymbol(h,h.noDataColor,f,a.symbolType,a.colorMixMode,a.edgesType):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:u,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===u?g.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new z({type:"class-breaks-color",classificationMethod:l,standardDeviationInterval:a.standardDeviationInterval})});n||r.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,
classificationMethod:l,normalizationType:u,round:!0});return d.resolve({renderer:c,colorScheme:p.cloneScheme(h),classBreaksResult:g,defaultValuesUsed:b.defaultValuesUsed,basemapId:m.basemapId})}Object.defineProperty(n,"__esModule",{value:!0});var C=Math.pow(2,53)-1;n.createVisualVariable=B;n.createContinuousRenderer=function(a){return I(a).then(function(a){return B(N(a)).then(function(b){var c=a.normalizationField,d=c?"field":void 0,f=a.field,g=a.layer.geometryType,k=a.defaultSymbolEnabled,l=p.cloneScheme(b.colorScheme);
return{renderer:new x({classBreakInfos:[{minValue:-C,maxValue:C,symbol:e.createSymbol(l,l.noDataColor,g,a.symbolType,a.colorMixMode,a.edgesType)}],defaultLabel:k?w.other:null,defaultSymbol:k?e.createSymbol(l,l.noDataColor,g,a.symbolType,a.colorMixMode,a.edgesType):null,field:f,normalizationType:d,normalizationField:c,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,visualVariables:[r.cloneColorVariable(b.visualVariable)],authoringInfo:b.authoringInfo&&b.authoringInfo.clone()}),
visualVariable:r.cloneColorVariable(b.visualVariable),statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:p.cloneScheme(b.colorScheme),basemapId:b.basemapId}})})};n.createClassBreaksRenderer=function(a){return J(a).then(function(a){return e.getClassBreaks(K(a)).then(function(b){return P(a,b)})})};n.createPCTrueColorRenderer=function(a){return L(a).then(function(a){return{renderer:new E({field:"RGB",pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size)})}})};
n.createPCContinuousRenderer=function(a){return M(a).then(function(a){return(a.statistics?d.resolve(a.statistics):y({layer:a.layer,field:a.field})).then(function(b){var c=t({basemap:a.basemap,colorScheme:a.colorScheme,geometryType:a.layer.geometryType,schemeId:"elevation"===a.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),f=c.scheme;if(f){var h=e.createColors(f.colors,5);if(5>h.length)b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info",
"Color scheme does not have enough colors"));else{var g=e.getDefaultDataRange(b,!1,!0),k=g?A(g[0],g[1],5):e.createStopValues(b),h=r.createColorStops({values:k,isDate:!1,dateFormatOptions:null,colors:h,labelIndexes:[0,2,4]});b=d.resolve({stops:h,basemapId:c.basemapId,statistics:b,defaultValuesUsed:!!g,colorScheme:p.cloneScheme(f)})}}else b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme"));return b}).then(function(b){return{renderer:new F({field:a.field,
pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size),stops:b.stops}),basemapId:b.basemapId,statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:b.colorScheme}})})}});