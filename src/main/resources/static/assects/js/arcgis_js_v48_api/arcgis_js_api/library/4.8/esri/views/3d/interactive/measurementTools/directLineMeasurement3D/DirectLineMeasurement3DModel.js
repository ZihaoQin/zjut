// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../core/tsSupport/declareExtendsHelper ../../../../../core/tsSupport/decorateHelper ../../../../../core/Accessor ../../../../../core/Collection ../../../../../core/Handles ../../../../../core/watchUtils ../../../../../core/accessorSupport/decorators ../../../../../geometry/SpatialReference ../../../../../geometry/support/geodesicUtils ../support/Quantity ../support/quantityUtils ../support/UnitNormalizer ../support/unitUtils ../../../lib/glMatrix ../../../support/earthUtils ../../../support/mathUtils ../../../support/projectionUtils ../../../webgl-engine/lib/Util".split(" "),
function(D,E,u,d,v,w,x,y,c,q,z,h,g,A,r,l,B,m,n,C){var t=B.earthRadius*Math.PI/180;return function(p){function a(){var b=null!==p&&p.apply(this,arguments)||this;b._tempStartPosition=l.vec3d.create();b._tempEndPosition=l.vec3d.create();b._tempCornerPosition=l.vec3d.create();b._unitNormalizer=new A;b._handles=new x;b.cursorPoint=null;b.hoveredHandle=null;b.draggedHandles=new w;b.state="initial";b.mode="auto";b.unit="metric";b.directDistance=null;b.horizontalDistance=null;b.verticalDistance=null;b.geodesicDistance=
null;b.geodesicAngle=null;b.triangleCollapseRatioThreshold=.03;b.geodesicMeasurementDistanceThreshold=1E5;return b}u(a,p);a.prototype.initialize=function(){var b=this;this._handles.add(y.init(this.sceneView,"spatialReference",function(a){b._unitNormalizer.spatialReference=a;b._unitNormalizer.ignoredSpatialReferences=[q.WGS84,q.WebMercator]}),"scene-view");this.reset()};a.prototype.destroy=function(){this._handles.destroy();this._handles=null};Object.defineProperty(a.prototype,"startPoint",{set:function(b){this._set("startPoint",
b);this._updateMeasurement()},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"startPointSurfaceLocation",{set:function(b){this._set("startPointSurfaceLocation",b);this._updateMeasurement()},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"endPoint",{set:function(b){this._set("endPoint",b);this._updateMeasurement()},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"endPointSurfaceLocation",{set:function(b){this._set("endPointSurfaceLocation",b);
this._updateMeasurement()},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"measurementSurfaceLocation",{get:function(){var b=this.startPointSurfaceLocation,a=this.endPointSurfaceLocation;return null==b||null==a?"camera-dependent":"above-the-surface"===b&&"below-the-surface"===a||"below-the-surface"===b&&"above-the-surface"===a||"on-the-surface"===b&&"on-the-surface"===a?"camera-dependent":"above-the-surface"===b||"above-the-surface"===a?"above-the-surface":"below-the-surface"},
enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"validMeasurement",{get:function(){return!!this.startPoint&&!!this.endPoint},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"isMeasuring",{get:function(){return!!this.startPoint},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"geodesicDistanceExceeded",{get:function(){return this.horizontalDistance&&this.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold},enumerable:!0,configurable:!0});
Object.defineProperty(a.prototype,"measurementMode",{get:function(){var b=this.mode;if("auto"===b){b="euclidean";if("degrees"===this.unit||"degrees-minutes-seconds"===this.unit)b="geodesic";this.geodesicDistanceExceeded&&(b="geodesic")}return b},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"triangleView",{get:function(){var b=this._collapseTriangle(),a=null,c=null,d=null,e=this.directDistance,c="geodesic"===this.measurementMode?this.geodesicDistance:this.horizontalDistance,k=
this.verticalDistance,f=null;switch(this.unit){case "metric":a=e&&g.formatMetricLength(e);c=c&&g.formatMetricLength(c);d=k&&g.formatMetricVerticalLength(k);f=e&&e.toUnit("meters");break;case "imperial":a=e&&g.formatImperialLength(e);c=c&&g.formatImperialLength(c);d=k&&g.formatImperialVerticalLength(k);f=e&&e.toUnit(r.preferredImperialLengthUnit(e.value,e.unit));break;case "degrees":c=this.geodesicAngle&&g.formatDecimal(this.geodesicAngle,"degrees");f=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");
break;case "degrees-minutes-seconds":c=this.geodesicAngle&&g.formatDMS(this.geodesicAngle);f=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;default:a=e&&g.formatDecimal(e,this.unit),c=c&&g.formatDecimal(c,this.unit),d=k&&g.formatDecimal(k,this.unit),f=e&&e.toUnit(this.unit)}e=1;f&&(e=C.nextHighestPowerOfTen(f.value/30),e*="degrees"===f.unit?t:r.convertUnit(1,f.unit,"meters"),e/=this._unitNormalizer.normalizeDistance(1));return{visible:this.validMeasurement&&!this.startPoint.equals(this.endPoint),
mode:this.measurementMode,collapsed:b,directLabel:a,horizontalLabel:c,verticalLabel:d,stripeLength:e}},enumerable:!0,configurable:!0});a.prototype.reset=function(){this.clearMeasurement()};a.prototype.clearMeasurement=function(){this.state="initial";this.cursorPoint=this.endPoint=this.startPoint=null;this._clearOverride("measurementSurfaceLocation");this._updateMeasurement()};a.prototype.finishedMeasurement=function(b){if(!this._isOverridden("measurementSurfaceLocation")){var a=this.measurementSurfaceLocation;
this._override("measurementSurfaceLocation","camera-dependent"===a?b.cameraAboveGround?"above-the-surface":"below-the-surface":a)}this.state="measured"};a.prototype._collapseTriangle=function(){return!this.validMeasurement||this.startPoint.equals(this.endPoint)||"geodesic"===this.measurementMode?!0:Math.min(this.verticalDistance.value/this.horizontalDistance.value,this.horizontalDistance.value/this.verticalDistance.value)<this.triangleCollapseRatioThreshold};a.prototype._exactGeodesicDistanceAndAngle=
function(b,a){var c=m.deg2rad(b.longitude);b=m.deg2rad(b.latitude);var d=m.deg2rad(a.longitude),e=m.deg2rad(a.latitude);a=m.rad2deg(Math.acos(Math.sin(b)*Math.sin(e)+Math.cos(b)*Math.cos(e)*Math.cos(Math.abs(d-c))));c=z.inverseGeodeticSolver(b,c,e,d).geodesicDistance;return{distance:new h(c,"meters"),angle:new h(a,"degrees")}};a.prototype._approximateGeodesicDistanceAndAngle=function(b){return{distance:new h(b,"meters"),angle:new h(b/t,"degrees")}};a.prototype._euclideanDistances=function(b,a){b.z>
a.z&&(b=[b,b=a][0]);var c=b.clone();c.z=a.z;var d=this._tempStartPosition,e=this._tempEndPosition,g=this._tempCornerPosition,f=this.sceneView.spatialReference,f=f.isWGS84||f.isWebMercator?n.WGS84ECEFSpatialReference:f;n.pointToVector(b,d,f);n.pointToVector(a,e,f);n.pointToVector(c,g,f);c=l.vec3d.dist(d,e);e=l.vec3d.dist(g,e);b=Math.abs(a.z-b.z);c=this._unitNormalizer.normalizeDistance(c);e=this._unitNormalizer.normalizeDistance(e);b=this._unitNormalizer.normalizeElevation(b);return{direct:new h(c,
"meters"),horizontal:new h(e,"meters"),vertical:new h(b,"meters")}};a.prototype._updateMeasurement=function(){if(this.startPoint&&this.endPoint){var a=this._euclideanDistances(this.startPoint,this.endPoint),c=this.sceneView.spatialReference,c=c.isWGS84||c.isWebMercator?this._exactGeodesicDistanceAndAngle(this.startPoint,this.endPoint):this._approximateGeodesicDistanceAndAngle(a.horizontal.value);this._set("directDistance",a.direct);this._set("horizontalDistance",a.horizontal);this._set("verticalDistance",
a.vertical);this._set("geodesicDistance",c.distance);this._set("geodesicAngle",c.angle)}else this._set("directDistance",null),this._set("horizontalDistance",null),this._set("verticalDistance",null),this._set("geodesicDistance",null),this._set("geodesicAngle",null)};d([c.property({constructOnly:!0})],a.prototype,"sceneView",void 0);d([c.property({value:null})],a.prototype,"startPoint",null);d([c.property({value:null})],a.prototype,"startPointSurfaceLocation",null);d([c.property({value:null})],a.prototype,
"endPoint",null);d([c.property({value:null})],a.prototype,"endPointSurfaceLocation",null);d([c.property({dependsOn:["startPointSurfaceLocation","endPointSurfaceLocation"]})],a.prototype,"measurementSurfaceLocation",null);d([c.property()],a.prototype,"cursorPoint",void 0);d([c.property()],a.prototype,"hoveredHandle",void 0);d([c.property({readOnly:!0})],a.prototype,"draggedHandles",void 0);d([c.property()],a.prototype,"state",void 0);d([c.property()],a.prototype,"mode",void 0);d([c.property()],a.prototype,
"unit",void 0);d([c.property({readOnly:!0,dependsOn:["startPoint","endPoint"]})],a.prototype,"validMeasurement",null);d([c.property({readOnly:!0,dependsOn:["startPoint"]})],a.prototype,"isMeasuring",null);d([c.property({readOnly:!0})],a.prototype,"directDistance",void 0);d([c.property({readOnly:!0})],a.prototype,"horizontalDistance",void 0);d([c.property({readOnly:!0})],a.prototype,"verticalDistance",void 0);d([c.property({readOnly:!0})],a.prototype,"geodesicDistance",void 0);d([c.property({readOnly:!0})],
a.prototype,"geodesicAngle",void 0);d([c.property({readOnly:!0,dependsOn:["horizontalDistance","geodesicMeasurementDistanceThreshold"]})],a.prototype,"geodesicDistanceExceeded",null);d([c.property({readOnly:!0,dependsOn:["horizontalDistance","unit","geodesicDistanceExceeded"]})],a.prototype,"measurementMode",null);d([c.property({readOnly:!0,dependsOn:["unit","measurementMode","startPoint","endPoint","triangleCollapseRatioThreshold"]})],a.prototype,"triangleView",null);d([c.property()],a.prototype,
"triangleCollapseRatioThreshold",void 0);d([c.property()],a.prototype,"geodesicMeasurementDistanceThreshold",void 0);return a=d([c.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],a)}(c.declared(v))});