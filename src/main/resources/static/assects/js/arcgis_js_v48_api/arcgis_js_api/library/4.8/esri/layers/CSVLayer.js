// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/assignHelper ../core/tsSupport/paramHelper ../geometry ../core/urlUtils ../core/accessorSupport/decorators ./FeatureLayer ./graphics/data/FeatureStoreCapabilities ./graphics/sources/CSVSource ../tasks/support/Query".split(" "),function(u,v,m,c,n,e,p,g,b,q,r,h,f){return function(k){function a(d,a){d=k.call(this)||this;d.delimiter=null;d.fields=null;d.latitudeField=null;d.locationType="coordinates";
d.longitudeField=null;d.operationalLayerType="CSV";d.outFields=["*"];d.portalItem=null;d.spatialReference=p.SpatialReference.WGS84;d.source=null;d.type="csv";return d}m(a,k);a.prototype.normalizeCtorArgs=function(a,b){return"string"===typeof a?n({url:a},b):a};Object.defineProperty(a.prototype,"capabilities",{get:function(){return{data:{supportsAttachment:!1,supportsM:!1,supportsZ:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,
supportsQuery:!0,supportsResizeAttachments:!1,supportsUpdate:!1},query:r.queryCapabilities,queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1},editing:{supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"hasService",{get:function(){return!1},
enumerable:!0,configurable:!0});a.prototype.readWebMapLabelsVisible=function(a,b){return null!=b.showLabels?b.showLabels:!!(b.layerDefinition&&b.layerDefinition.drawingInfo&&b.layerDefinition.drawingInfo.labelingInfo)};Object.defineProperty(a.prototype,"url",{set:function(a){this._set("url",a)},enumerable:!0,configurable:!0});a.prototype.readUrl=function(a,b,c){return g.read(a,c)};a.prototype.writeUrl=function(a,b,c,t){a=g.write(a,t);b.url=a?g.normalize(a):a};a.prototype.createGraphicsSource=function(){var a=
this,b=new h.default({delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,url:this.url});this._set("source",b);return b.when(function(){a.read({locationInfo:b.locationInfo,columnDelimiter:b.columnDelimiter},{origin:"service",url:a.parsedUrl});return b})};a.prototype.queryFeatures=function(a,b){var c=this;return this.load().then(function(){return c.source.queryFeatures(a||c.createQuery())}).then(function(a){if(a&&
a.features)for(var b=0,d=a.features;b<d.length;b++){var l=d[b];l.layer=l.sourceLayer=c}return a})};a.prototype.queryFeaturesJSON=function(a,b){var c=this;return this.load().then(function(){return c.source.queryFeaturesJSON(a||c.createQuery())})};a.prototype.queryObjectIds=function(a,b){var c=this;return this.load().then(function(){return c.source.queryObjectIds(a||c.createQuery())})};a.prototype.queryFeatureCount=function(a,b){var c=this;return this.load().then(function(){return c.source.queryFeatureCount(a||
c.createQuery())})};a.prototype.queryExtent=function(a,b){var c=this;return this.load().then(function(){return c.source.queryExtent(a||c.createQuery())})};a.prototype._verifyFields=function(){};a.prototype._verifySource=function(){};a.prototype._hasMemorySource=function(){return!0};c([b.property({readOnly:!0,dependsOn:["loaded"],json:{read:!1}})],a.prototype,"capabilities",null);c([b.property({type:String,json:{write:{target:"columnDelimiter"},read:{source:"columnDelimiter"}}})],a.prototype,"delimiter",
void 0);c([b.property({json:{read:{source:"layerDefinition.fields"}}})],a.prototype,"fields",void 0);c([b.property({readOnly:!0})],a.prototype,"hasService",null);c([b.reader("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],a.prototype,"readWebMapLabelsVisible",null);c([b.property({type:String,json:{write:{target:"locationInfo.latitudeFieldName"},read:{source:"locationInfo.latitudeFieldName"}}})],a.prototype,"latitudeField",void 0);c([b.property({type:String,json:{write:{target:"locationInfo.locationType"},
read:{source:"locationInfo.locationType"}}})],a.prototype,"locationType",void 0);c([b.property({type:String,json:{write:{target:"locationInfo.longitudeFieldName"},read:{source:"locationInfo.longitudeFieldName"}}})],a.prototype,"longitudeField",void 0);c([b.property()],a.prototype,"operationalLayerType",void 0);c([b.property()],a.prototype,"outFields",void 0);c([b.property({json:{read:!1,write:!1}})],a.prototype,"portalItem",void 0);c([b.property({json:{read:!1},cast:null,type:h.default,readOnly:!0})],
a.prototype,"source",void 0);c([b.property({json:{read:!1},value:"csv",readOnly:!0})],a.prototype,"type",void 0);c([b.property({json:{write:!0}})],a.prototype,"url",null);c([b.reader("url")],a.prototype,"readUrl",null);c([b.writer("url")],a.prototype,"writeUrl",null);c([e(0,b.cast(f))],a.prototype,"queryFeatures",null);c([e(0,b.cast(f))],a.prototype,"queryFeaturesJSON",null);c([e(0,b.cast(f))],a.prototype,"queryObjectIds",null);c([e(0,b.cast(f))],a.prototype,"queryFeatureCount",null);c([e(0,b.cast(f))],
a.prototype,"queryExtent",null);return a=c([b.subclass("esri.layers.CSVLayer")],a)}(b.declared(q))});