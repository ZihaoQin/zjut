// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/webgl-engine/materials/ColorMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vertexShaderColorMaterial"\x3e\x3c![CDATA[\r\n  $vsprecisionf\r\n\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n  uniform mat4 model;\r\n\r\n  attribute vec3 $position;\r\n#ifdef VERTEXCOLORS\r\n  attribute vec4 $color;\r\n\r\n  varying vec4 vColor;\r\n#endif\r\n\r\n  void main(void) {\r\n#ifdef VERTEXCOLORS\r\n    vColor \x3d $color * 0.003921568627451; // \x3d 1/255;\r\n#endif\r\n    gl_Position \x3d proj * view * vec4((model * vec4($position, 1.0)).xyz, 1.0);\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fragmentShaderColorMaterial"\x3e\x3c![CDATA[\r\n  $fsprecisionf\r\n\r\n  uniform vec4 eColor;\r\n#ifdef VERTEXCOLORS\r\n  varying vec4 vColor;\r\n#endif\r\n\r\n  void main() {\r\n#ifdef VERTEXCOLORS\r\n    gl_FragColor \x3d vColor * eColor;\r\n#else\r\n    gl_FragColor \x3d eColor;\r\n#endif\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n'}});
define("require exports ../../../../core/tsSupport/extendsHelper dojo/text!./ColorMaterial.xml ../lib/DefaultVertexBufferLayouts ../lib/GLMaterial ../lib/Material ../lib/RenderSlot ../lib/ShaderVariations ../lib/Util ./internal/MaterialUtil ../../../webgl/Util".split(" "),function(l,z,e,n,p,m,q,f,r,A,h,t){var k=p.Pos3Col,u=t.getStride(k)/4,v={color:[1,1,1,1],transparent:!1,vertexColors:!1,polygonOffset:!1};l=function(d){function a(b,a){a=d.call(this,a)||this;a.supportsEdges=!0;a.params=h.copyParameters(b,
v);return a}e(a,d);a.prototype.getParams=function(){return this.params};a.prototype.getParameterValues=function(){return h.copyParameters(this.params)};a.prototype.setColor=function(b){this.params.color=b;this.notifyDirty("matChanged")};a.prototype.getColor=function(){return this.params.color};a.prototype.setTransparent=function(b){this.params.transparent=b;this.notifyDirty("matChanged")};a.prototype.getTransparent=function(){return this.params.transparent};a.prototype.getOutputAmount=function(b){return b*
u*1};a.prototype.getVertexBufferLayout=function(){return k};a.prototype.getInstanceBufferLayout=function(){};a.prototype.fillInterleaved=function(b,a,g,d,e,f,w){h.fillInterleaved(b,a,g,d,k,e,f,w)};a.prototype.intersect=function(b,a,g,d,e,f,k,l){h.intersectTriangleGeometry(b,a,g,d,e,f,k)};a.prototype.getGLMaterials=function(){return{color:x,depthShadowMap:void 0,normal:void 0,depth:void 0,highlight:y}};a.prototype.getAllTextureIds=function(){return[]};a.loadShaders=function(b,a,g){b._parse(n);b=new r("colorMaterial",
["vertexShaderColorMaterial","fragmentShaderColorMaterial"],null,a,b,g);b.addDefine("Color","VERTEXCOLORS");a.addShaderVariations("colorMaterial",b)};return a}(q);var x=function(d){function a(b,a,g){b=d.call(this,b,a)||this;b.updateParameters();return b}e(a,d);a.prototype.updateParameters=function(){this.params=this.material.getParameterValues();this.selectProgram()};a.prototype.selectProgram=function(){this.program=this.programRep.getShaderVariationsProgram("colorMaterial",[this.params.vertexColors])};
a.prototype.beginSlot=function(b){return b===(1>this.params.color[3]?f.TRANSPARENT_MATERIAL:f.OPAQUE_MATERIAL)};a.prototype.getProgram=function(){return this.program};a.prototype.bind=function(b,a){a=this.program;var c=this.params;b.bindProgram(a);a.setUniform4fv("eColor",c.color);b.setFaceCullingEnabled(!1);c.polygonOffset&&(b.setPolygonOffsetFillEnabled(!0),b.setPolygonOffset(1,1));c.transparent&&(b.setBlendingEnabled(!0),b.setBlendFunctionSeparate(b.gl.SRC_ALPHA,b.gl.ONE_MINUS_SRC_ALPHA,b.gl.ONE,
b.gl.ONE_MINUS_SRC_ALPHA));b.setDepthTestEnabled(!0)};a.prototype.release=function(b){var a=this.params;b.setPolygonOffsetFillEnabled(!1);a.transparent&&b.setBlendingEnabled(!1)};a.prototype.bindView=function(a,c){h.bindView(c.origin,c.view,this.program)};a.prototype.bindInstance=function(a,c){this.program.setUniformMatrix4fv("model",c.transformation)};a.prototype.getDrawMode=function(a){return a.gl.TRIANGLES};return a}(m),y=function(d){function a(a,c,g){a=d.call(this,a,c)||this;a.updateParameters();
return a}e(a,d);a.prototype.updateParameters=function(){this.params=this.material.getParameterValues();this.selectProgram()};a.prototype.selectProgram=function(){this.program=this.programRep.getShaderVariationsProgram("colorMaterial",[this.params.vertexColors])};a.prototype.beginSlot=function(a){return a===f.OPAQUE_MATERIAL};a.prototype.getProgram=function(){return this.program};a.prototype.bind=function(a,c){c=this.program;var b=this.params;a.bindProgram(c);c.setUniform4fv("eColor",b.color);a.setFaceCullingEnabled(!1);
b.polygonOffset&&(a.setPolygonOffsetFillEnabled(!0),a.setPolygonOffset(1,1))};a.prototype.release=function(a){a.setPolygonOffsetFillEnabled(!1)};a.prototype.bindView=function(a,c){h.bindView(c.origin,c.view,this.program)};a.prototype.bindInstance=function(a,c){this.program.setUniformMatrix4fv("model",c.transformation)};a.prototype.getDrawMode=function(a){return a.gl.TRIANGLES};return a}(m);return l});